{"version":3,"file":"static/js/670.fcdf296b.chunk.js","mappings":"+LACA,EAAgC,gCAAhC,EAA2E,2BAA3E,EAAgH,0BAAhH,EAA4J,kCAA5J,EAA0M,4BAA1M,EAAmP,6BAAnP,EAAgS,gCAAhS,EAA0U,0B,iECG7TA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAoCD,EAApCC,OAAQC,EAA4BF,EAA5BE,UAAWC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACjC,OACE,iBAAKC,UAAWC,EAAhB,WACE,cACEC,KAAK,0BACLC,OAAO,SACPC,IAAI,sBAHN,UAKE,gBAAKC,I,6+BAAWC,IAAI,OAAON,UAAWC,OAExC,gBAAKI,IAAKE,EAASD,IAAG,UAAKR,EAAL,WAAoBE,UAAWC,KACrD,gBAAKD,UAAWC,EAAhB,UACE,gBAAKK,IAAI,SAASD,IAAKN,EAAQC,UAAWC,OAE5C,eAAGD,UAAWC,EAAd,UAA+BL,EAA/B,cACA,eAAGI,UAAWC,EAAd,UACGJ,EAAUW,eAAe,SAD5B,iBAIA,mBAAQC,KAAK,SAAST,UAAWC,EAAjC,sBAUL,EChCD,EAAgCS,EAAQ,KAAhCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SACXC,EAAaH,EAAQ,KAArBG,SAiBR,EAfiB,WACf,MAA0BD,EAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAOA,OALAJ,GAAU,WACRE,IAAWG,MAAK,SAAAC,GAAI,OAAIF,EAASE,EAAb,GACrB,GAAE,IAEHC,QAAQC,IAAIL,IAEV,yBACE,SAACpB,EAAD,CAAU0B,MAAON,KAGtB,ECZD,EAJmB,WACjB,OAAO,SAAC,EAAD,GACR,C,4GCAM,SAAeD,IAAtB,4CAAO,OAAP,oBAAO,+GAEkBQ,EAAAA,EAAAA,IAAU,UAF5B,uBAEIJ,EAFJ,EAEIA,KAFJ,kBAGIA,GAHJ,yDAKIK,QAAQC,OAAO,IAAIC,MAAM,wBAL7B,gFAFPH,EAAAA,EAAAA,SAAAA,QAAyB,6C","sources":["webpack://react-homework-template/./src/components/CardItem/CardItem.module.css?133d","components/CardItem/CardItem.jsx","components/CardsList/CardsList.jsx","Pages/TweetsPage.jsx","services/fetchAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardContainer\":\"CardItem_cardContainer__GzGWE\",\"cardLogo\":\"CardItem_cardLogo__1c4eW\",\"cardImg\":\"CardItem_cardImg__qxZx0\",\"avatarContainer\":\"CardItem_avatarContainer__2p7UV\",\"avatarImg\":\"CardItem_avatarImg__qX5SW\",\"cardTweets\":\"CardItem_cardTweets__F3Wwb\",\"cardFollowers\":\"CardItem_cardFollowers__v+I8G\",\"cardBtn\":\"CardItem_cardBtn__PYbNn\",\"cardBtnFollowing\":\"CardItem_cardBtnFollowing__w+DRo\"};","import css from './CardItem.module.css';\nimport logo from '../../img/logo.png';\nimport picture from '../../img/picture21.png';\n\nexport const CardItem = ({ item }) => {\n  const { tweets, followers, user, avatar } = item;\n  return (\n    <div className={css.cardContainer}>\n      <a\n        href=\"https://goit.global/ua/\"\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        <img src={logo} alt=\"GoIT\" className={css.cardLogo} />\n      </a>\n      <img src={picture} alt={`${user} avatar`} className={css.cardImg} />\n      <div className={css.avatarContainer}>\n        <img alt=\"avatar\" src={avatar} className={css.avatarImg}></img>\n      </div>\n      <p className={css.cardTweets}>{tweets} tweets</p>\n      <p className={css.cardFollowers}>\n        {followers.toLocaleString('en-US')} followers\n      </p>\n      {/* {isFollowing ? ( */}\n      <button type=\"button\" className={css.cardBtn}>\n        Follow\n      </button>\n      {/* ) : (\n        <button type=\"button\" className={css.cardBtnFollowing}>\n          Following\n        </button>\n      )} */}\n    </div>\n  );\n};\n","import { CardItem } from 'components/CardItem/CardItem';\n\nconst { useEffect, useState } = require('react');\nconst { getUsers } = require('services/fetchAPI');\n\nconst CardList = () => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    getUsers().then(data => setUsers(data));\n  }, []);\n\n  console.log(users);\n  return (\n    <ul>\n      <CardItem items={users} />\n    </ul>\n  );\n};\n\nexport default CardList;\n","import CardList from 'components/CardsList/CardsList';\n\nconst TweetsPage = () => {\n  return <CardList />;\n};\n\nexport default TweetsPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://6457cd1e1a4c152cf98acf28.mockapi.io';\n\nexport async function getUsers() {\n  try {\n    const {data} = await axios.get('/Users');\n    return data;\n  } catch (error) {\n    return Promise.reject(new Error('There is no movies'));\n  }\n}\n"],"names":["CardItem","item","tweets","followers","user","avatar","className","css","href","target","rel","src","alt","picture","toLocaleString","type","require","useEffect","useState","getUsers","users","setUsers","then","data","console","log","items","axios","Promise","reject","Error"],"sourceRoot":""}